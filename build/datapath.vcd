$date
	Fri Jul 15 15:05:23 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module DatapathTB $end
$var reg 1 ! clock $end
$var reg 1 " reset $end
$scope module datapath $end
$var wire 1 ! clock $end
$var wire 1 " reset $end
$var wire 1 # zero $end
$var wire 32 $ writeData [31:0] $end
$var wire 32 % readData [31:0] $end
$var wire 1 & rWrite $end
$var wire 1 ' memtoReg $end
$var wire 1 ( memWrite $end
$var wire 1 ) memRead $end
$var wire 32 * instruction [31:0] $end
$var wire 32 + immediate [31:0] $end
$var wire 32 , data2 [31:0] $end
$var wire 32 - data1 [31:0] $end
$var wire 1 . branch $end
$var wire 32 / auxiliarData [31:0] $end
$var wire 32 0 PCshift [31:0] $end
$var wire 32 1 PCpsadd [31:0] $end
$var wire 32 2 PCNext [31:0] $end
$var wire 32 3 PC [31:0] $end
$var wire 32 4 ALUout [31:0] $end
$var wire 1 5 ALUSrc $end
$var wire 2 6 ALUOp [1:0] $end
$var wire 4 7 ALUCrt [3:0] $end
$scope module alu $end
$var wire 1 ! clock $end
$var wire 32 8 input2 [31:0] $end
$var wire 32 9 input1 [31:0] $end
$var wire 4 : ALUControl [3:0] $end
$var reg 32 ; ALUOut [31:0] $end
$var reg 1 # zero $end
$upscope $end
$scope module aluCrt $end
$var wire 1 ! clock $end
$var wire 3 < funct3 [2:0] $end
$var wire 7 = funct7 [6:0] $end
$var wire 2 > ALUOp [1:0] $end
$var reg 4 ? outALUControl [3:0] $end
$upscope $end
$scope module control $end
$var wire 1 ! clock $end
$var wire 7 @ opcode [6:0] $end
$var reg 2 A ALUOp [1:0] $end
$var reg 1 5 ALUSrc $end
$var reg 1 . branch $end
$var reg 1 ) memoryRead $end
$var reg 1 ' memoryToRegister $end
$var reg 1 ( memoryWrite $end
$var reg 1 & rWrite $end
$upscope $end
$scope module dataMem $end
$var wire 1 ! clock $end
$var wire 1 ( memRead $end
$var wire 1 ) memWrite $end
$var wire 32 B position [31:0] $end
$var wire 1 " reset $end
$var wire 32 C writeData [31:0] $end
$var reg 32 D readData [31:0] $end
$upscope $end
$scope module immGen $end
$var wire 1 ! clock $end
$var wire 32 E immediate [31:0] $end
$var reg 32 F outImmediate [31:0] $end
$upscope $end
$scope module instructionMem $end
$var wire 1 ! clock $end
$var wire 1 " reset $end
$var wire 32 G PC [31:0] $end
$var reg 32 H out [31:0] $end
$upscope $end
$scope module mux1 $end
$var wire 1 ! clock $end
$var wire 32 I input2 [31:0] $end
$var wire 1 5 selector $end
$var wire 32 J input1 [31:0] $end
$var reg 32 K out [31:0] $end
$upscope $end
$scope module mux2 $end
$var wire 1 ! clock $end
$var wire 32 L input1 [31:0] $end
$var wire 32 M input2 [31:0] $end
$var wire 1 ' selector $end
$var reg 32 N out [31:0] $end
$upscope $end
$scope module mux32And $end
$var wire 1 . branch $end
$var wire 1 ! clock $end
$var wire 1 # zero $end
$var wire 32 O addPCShift [31:0] $end
$var wire 32 P addPC [31:0] $end
$var reg 32 Q PCNext [31:0] $end
$var reg 1 R selector $end
$upscope $end
$scope module pcAdd $end
$var wire 1 ! clock $end
$var wire 1 " reset $end
$var wire 32 S outPCNext [31:0] $end
$var reg 32 T outPCAdder [31:0] $end
$upscope $end
$scope module pcAdderShift $end
$var wire 1 ! clock $end
$var wire 32 U immediate [31:0] $end
$var wire 1 " reset $end
$var wire 32 V outPCNext [31:0] $end
$var reg 32 W PCAddShift [31:0] $end
$upscope $end
$scope module programCounter $end
$var wire 32 X PCNext [31:0] $end
$var wire 1 ! clock $end
$var wire 1 " reset $end
$var reg 32 Y outPCNext [31:0] $end
$upscope $end
$scope module registerMem $end
$var wire 1 ! clock $end
$var wire 32 Z dataWrite [31:0] $end
$var wire 1 & rWrite $end
$var wire 1 " reset $end
$var wire 5 [ rs1 [4:0] $end
$var wire 5 \ rs2 [4:0] $end
$var wire 5 ] rsWrite [4:0] $end
$var reg 32 ^ outRS1 [31:0] $end
$var reg 32 _ outRS2 [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#6
$dumpvars
b1 _
b0 ^
b11 ]
b0 \
b10100 [
bx Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
0R
b0 Q
b0 P
b0 O
bx N
b1 M
bx L
b1 K
b1 J
b0 I
b10100010000110000011 H
b0 G
b0 F
b10100010000110000011 E
bx D
b1 C
b1 B
b10 A
b11 @
b10 ?
b10 >
b0 =
b10 <
b1 ;
b10 :
b0 9
b1 8
b10 7
b10 6
05
b1 4
b0 3
b0 2
b0 1
b0 0
b1 /
0.
b0 -
b1 ,
b0 +
b10100010000110000011 *
0)
0(
0'
1&
bx %
bx $
0#
0"
0!
$end
#7
b0 6
b0 >
b0 A
1)
1'
15
b0 ,
b0 C
b0 J
b0 _
b10100 -
b10100 9
b10100 ^
b0 <
b10 ]
b1 \
b0 [
b110011 @
b100 1
b100 P
b100 T
b100000000000100110011 *
b100000000000100110011 E
b100000000000100110011 H
1!
#8
0!
#9
b1 ,
b1 C
b1 J
b1 _
b0 -
b0 9
b0 ^
b10 6
b10 >
b10 A
0)
0'
05
b100 3
b100 Q
b100 X
b10100 $
b10100 N
b10100 Z
b10100 4
b10100 ;
b10100 B
b10100 M
b0 /
b0 8
b0 K
1!
#10
0!
#11
b100 2
b100 G
b100 S
b100 V
b100 Y
b1 /
b1 8
b1 K
1#
b0 4
b0 ;
b0 B
b0 M
bx $
bx N
bx Z
1!
#12
0!
#13
b10 <
b11 ]
b0 \
b10100 [
b11 @
b100 0
b100 O
b100 W
b1000 3
b1000 Q
b1000 X
0#
b1 4
b1 ;
b1 B
b1 M
b10100010000110000011 *
b10100010000110000011 E
b10100010000110000011 H
b1000 1
b1000 P
b1000 T
1!
#14
0!
#15
b1000 2
b1000 G
b1000 S
b1000 V
b1000 Y
b0 6
b0 >
b0 A
1)
1'
15
b0 ,
b0 C
b0 J
b0 _
b10100 -
b10100 9
b10100 ^
1!
#16
0!
#17
b0 <
b100 ]
b10101 \
b11 [
b110011 @
b1000 0
b1000 O
b1000 W
b1100 3
b1100 Q
b1100 X
b10100 $
b10100 N
b10100 Z
b10100 4
b10100 ;
b10100 B
b10100 M
b0 /
b0 8
b0 K
b1010100011000001000110011 *
b1010100011000001000110011 E
b1010100011000001000110011 H
b1100 1
b1100 P
b1100 T
1!
#18
0!
#19
b1100 2
b1100 G
b1100 S
b1100 V
b1100 Y
b10 6
b10 >
b10 A
0)
0'
05
b10101 ,
b10101 C
b10101 J
b10101 _
bx -
bx 9
bx ^
1!
#20
0!
#21
b100000 =
b101 ]
b1111 \
b11110 [
b1100 0
b1100 O
b1100 W
b10000 3
b10000 Q
b10000 X
bx $
bx N
bx Z
bx 4
bx ;
bx B
bx M
b10101 /
b10101 8
b10101 K
b1000000111111110000001010110011 *
b1000000111111110000001010110011 E
b1000000111111110000001010110011 H
b10000 1
b10000 P
b10000 T
1!
#22
0!
#23
b10000 2
b10000 G
b10000 S
b10000 V
b10000 Y
b1111 ,
b1111 C
b1111 J
b1111 _
b11110 -
b11110 9
b11110 ^
b110 7
b110 :
b110 ?
1!
#24
0!
#25
b111 <
b0 =
b110 ]
b11011 \
b10110 [
b10000 0
b10000 O
b10000 W
b10100 3
b10100 Q
b10100 X
b1111 4
b1111 ;
b1111 B
b1111 M
b1111 /
b1111 8
b1111 K
b1101110110111001100110011 *
b1101110110111001100110011 E
b1101110110111001100110011 H
b10100 1
b10100 P
b10100 T
1!
#26
0!
#27
b10100 2
b10100 G
b10100 S
b10100 V
b10100 Y
b11011 ,
b11011 C
b11011 J
b11011 _
b10110 -
b10110 9
b10110 ^
b0 7
b0 :
b0 ?
1!
#28
0!
#29
b110 <
b111 ]
b1111 \
b110 [
b10100 0
b10100 O
b10100 W
b11000 3
b11000 Q
b11000 X
b10010 4
b10010 ;
b10010 B
b10010 M
b11011 /
b11011 8
b11011 K
b111100110110001110110011 *
b111100110110001110110011 E
b111100110110001110110011 H
b11000 1
b11000 P
b11000 T
1!
#30
0!
#31
b11000 2
b11000 G
b11000 S
b11000 V
b11000 Y
b1111 ,
b1111 C
b1111 J
b1111 _
bx -
bx 9
bx ^
b1 7
b1 :
b1 ?
1!
#32
0!
#33
b110 +
b110 F
b110 I
b110 U
b0 <
b1100 ]
b10 \
b1 [
b1100011 @
b11000 0
b11000 O
b11000 W
b11100 3
b11100 Q
b11100 X
bx1111 4
bx1111 ;
bx1111 B
bx1111 M
b1111 /
b1111 8
b1111 K
b1000001000011001100011 *
b1000001000011001100011 E
b1000001000011001100011 H
b11100 1
b11100 P
b11100 T
1!
#34
0!
#35
b11100 2
b11100 G
b11100 S
b11100 V
b11100 Y
b1 6
b1 >
b1 A
1.
0&
bx ,
bx C
bx J
bx _
b1 -
b1 9
b1 ^
b10 7
b10 :
b10 ?
b11110 0
b11110 O
b11110 W
1!
#36
0!
#37
b110 7
b110 :
b110 ?
b1000 ]
b11110 \
b11110 [
b110011 @
b100010 0
b100010 O
b100010 W
b100000 3
b100000 Q
b100000 X
bx 4
bx ;
bx B
bx M
bx /
bx 8
bx K
b1111011110000010000110011 *
b1111011110000010000110011 E
b1111011110000010000110011 H
b100000 1
b100000 P
b100000 T
1!
#38
0!
#39
b100000 2
b100000 G
b100000 S
b100000 V
b100000 Y
b10 6
b10 >
b10 A
0.
1&
b11110 ,
b11110 C
b11110 J
b11110 _
b11110 -
b11110 9
b11110 ^
1!
#40
0!
#41
b10 7
b10 :
b10 ?
b100000 =
b1001 ]
b11111 \
b11111 [
b100110 0
b100110 O
b100110 W
b100100 3
b100100 Q
b100100 X
1#
b0 4
b0 ;
b0 B
b0 M
b11110 /
b11110 8
b11110 K
b1000001111111111000010010110011 *
b1000001111111111000010010110011 E
b1000001111111111000010010110011 H
b100100 1
b100100 P
b100100 T
1!
#42
0!
#43
b100100 2
b100100 G
b100100 S
b100100 V
b100100 Y
b11111 ,
b11111 C
b11111 J
b11111 _
b11111 -
b11111 9
b11111 ^
b110 7
b110 :
b110 ?
0#
b111100 4
b111100 ;
b111100 B
b111100 M
1!
#44
0!
#45
b0 =
b1010 ]
b10001 \
b10111 [
b101010 0
b101010 O
b101010 W
b101000 3
b101000 Q
b101000 X
1#
b0 4
b0 ;
b0 B
b0 M
b11111 /
b11111 8
b11111 K
b1000110111000010100110011 *
b1000110111000010100110011 E
b1000110111000010100110011 H
b101000 1
b101000 P
b101000 T
1!
#46
0!
#47
b101000 2
b101000 G
b101000 S
b101000 V
b101000 Y
b10001 ,
b10001 C
b10001 J
b10001 _
b10111 -
b10111 9
b10111 ^
b10 7
b10 :
b10 ?
1!
#48
0!
#49
b0 +
b0 F
b0 I
b0 U
b10 <
b0 ]
b1010 \
b10000 [
b100011 @
b101110 0
b101110 O
b101110 W
b101100 3
b101100 Q
b101100 X
0#
b101000 4
b101000 ;
b101000 B
b101000 M
b10001 /
b10001 8
b10001 K
b101010000010000000100011 *
b101010000010000000100011 E
b101010000010000000100011 H
b101100 1
b101100 P
b101100 T
1!
#50
0!
#51
b101100 2
b101100 G
b101100 S
b101100 V
b101100 Y
b0 6
b0 >
b0 A
1(
0&
15
bx ,
bx C
bx J
bx _
b10000 -
b10000 9
b10000 ^
b101000 0
b101000 O
b101000 W
1!
#52
0!
#53
b10000 %
b10000 D
b10000 L
b101100 0
b101100 O
b101100 W
b110000 3
b110000 Q
b110000 X
b10000 4
b10000 ;
b10000 B
b10000 M
b0 /
b0 8
b0 K
b110000 1
b110000 P
b110000 T
1!
